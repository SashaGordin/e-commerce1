{"ast":null,"code":"var _jsxFileName = \"/Users/Sasha/Desktop/School/react/e-commerce1/src/components/sign-up-form/sign-up-form.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { createAuthUserWithEmailAndPassword, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { SignUpContainer, H2 } from './sign-up-form.styles';\nimport Button from \"../button/button.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  displayName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\"\n};\n\nconst SignUpForm = () => {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = formFields;\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault(); //confirm password matches\n\n    if (password !== confirmPassword) {\n      alert(\"passwords do not match\");\n      return;\n    }\n\n    try {\n      const {\n        user\n      } = await createAuthUserWithEmailAndPassword(email, password);\n      await createUserDocumentFromAuth(user, {\n        displayName\n      });\n      resetFormFields();\n    } catch (error) {\n      if (error.code === 'auth/email-already-in-use') {\n        alert('cannot create user email already in use');\n      } else {\n        console.log(error);\n      }\n    } //see if authenticated user with email password\n    //create user document from return of previos\n\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignUpContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dont have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Display Name\",\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"displayName\",\n        value: displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        required: true,\n        onChange: handleChange,\n        name: \"email\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        required: true,\n        onChange: handleChange,\n        name: \"password\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Confirm Password\",\n        type: \"password\",\n        required: true,\n        onChange: handleChange,\n        name: \"confirmPassword\",\n        value: confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        buttonType: \"default\",\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUpForm, \"BSTP5B8VO6H/Fwu712VTuD9hH54=\");\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/Users/Sasha/Desktop/School/react/e-commerce1/src/components/sign-up-form/sign-up-form.component.jsx"],"names":["useState","createAuthUserWithEmailAndPassword","createUserDocumentFromAuth","FormInput","SignUpContainer","H2","Button","defaultFormFields","displayName","email","password","confirmPassword","SignUpForm","formFields","setFormFields","resetFormFields","handleSubmit","event","preventDefault","alert","user","error","code","console","log","handleChange","name","value","target"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { createAuthUserWithEmailAndPassword, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nimport FormInput from \"../form-input/form-input.component\";\nimport {SignUpContainer, H2} from './sign-up-form.styles'\nimport Button from \"../button/button.component\";\n\nconst defaultFormFields = {\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n};\n\nconst SignUpForm = () => {\n    const [formFields, setFormFields] = useState(defaultFormFields);\n    const { displayName, email, password, confirmPassword} = formFields;\n\n\n    const resetFormFields = () => {\n        setFormFields(defaultFormFields);\n    }\n\n    const handleSubmit = async(event) => {\n        event.preventDefault();\n        //confirm password matches\n        if (password !== confirmPassword) {\n            alert(\"passwords do not match\");\n            return;\n        } \n        \n        try {\n            const {user} = await createAuthUserWithEmailAndPassword(email, password);\n            await createUserDocumentFromAuth(user, {displayName});\n            resetFormFields();\n        } catch(error) {\n            if (error.code === 'auth/email-already-in-use') {\n                alert('cannot create user email already in use')\n            } else {\n                console.log(error);\n            }\n        }\n       \n       \n        //see if authenticated user with email password\n        //create user document from return of previos\n\n    }\n\n    const handleChange = (event) => {\n        const { name,value } = event.target;\n\n        setFormFields({...formFields, [name]: value});\n    };\n\n    return (\n        <SignUpContainer>\n            <h2>Dont have an account?</h2>\n            <span>Sign up with your email and password</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput label= \"Display Name\" type=\"text\" required onChange = {handleChange} name=\"displayName\" value={displayName}/>\n\n                <FormInput label= \"Email\" type=\"email\" required onChange = {handleChange} name=\"email\" value={email}/>\n\n                <FormInput label= \"Password\" type=\"password\" required onChange = {handleChange} name=\"password\" value={password}/>\n\n                <FormInput label= \"Confirm Password\" type=\"password\" required onChange = {handleChange} name=\"confirmPassword\" value={confirmPassword}/>\n                <Button buttonType=\"default\" type=\"submit\">Sign Up</Button>\n            </form>\n        </SignUpContainer>\n    )\n}\n\nexport default SignUpForm;"]},"metadata":{},"sourceType":"module"}