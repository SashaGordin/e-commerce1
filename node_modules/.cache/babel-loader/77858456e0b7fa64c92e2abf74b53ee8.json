{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCkkglmnZ_BvxsxQrnPFUuFT3Dy1YGYhGI\",\n  authDomain: \"e-commerce1-da0b9.firebaseapp.com\",\n  projectId: \"e-commerce1-da0b9\",\n  storageBucket: \"e-commerce1-da0b9.appspot.com\",\n  messagingSenderId: \"648681719155\",\n  appId: \"1:648681719155:web:64666acbeed12ceefe7106\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.messaage);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"sources":["/Users/Sasha/Desktop/School/react/e-commerce1/src/utils/firebase/firebase.utils.js"],"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","messaage","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACIC,OADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,EAKIC,8BALJ,EAMIC,0BANJ,QAOO,eAPP;AASA,SACIC,YADJ,EAEIC,GAFJ,EAGIC,MAHJ,EAIIC,MAJJ,QAKO,oBALP;AAOA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,mCAFO;AAGnBC,EAAAA,SAAS,EAAE,mBAHQ;AAInBC,EAAAA,aAAa,EAAE,+BAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAAvB;AASA,MAAMC,WAAW,GAAGlB,aAAa,CAACW,cAAD,CAAjC;AAEA,MAAMQ,cAAc,GAAG,IAAIf,kBAAJ,EAAvB;AAEAe,cAAc,CAACC,mBAAf,CAAmC;AAC/BC,EAAAA,MAAM,EAAE;AADuB,CAAnC;AAIA,OAAO,MAAMC,IAAI,GAAGrB,OAAO,EAApB;AACP,OAAO,MAAMsB,qBAAqB,GAAG,MAAMpB,eAAe,CAACmB,IAAD,EAAOH,cAAP,CAAnD;AACP,OAAO,MAAMK,wBAAwB,GAAG,MAAMtB,kBAAkB,CAACoB,IAAD,EAAOH,cAAP,CAAzD;AAEP,OAAO,MAAMM,EAAE,GAAGlB,YAAY,EAAvB;AAEP,OAAO,MAAMmB,0BAA0B,GAAG,OAAOC,QAAP,EAAiBC,qBAAjB,KAA2C;AACjF,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,UAAU,GAAGrB,GAAG,CAACiB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACG,GAAvB,CAAtB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEA,QAAMI,YAAY,GAAG,MAAMxB,MAAM,CAACoB,UAAD,CAAjC;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,MAAb,EAAZ;;AAEA,MAAG,CAACD,YAAY,CAACC,MAAb,EAAJ,EAA2B;AACvB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAwBT,QAA9B;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAM5B,MAAM,CAACmB,UAAD,EAAa;AACrBM,QAAAA,WADqB;AAErBC,QAAAA,KAFqB;AAGrBC,QAAAA,SAHqB;AAIrB,WAAGT;AAJkB,OAAb,CAAZ;AAMH,KAPD,CAOE,OAAOW,KAAP,EAAc;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCO,KAAK,CAACC,QAA7C;AACH;AACJ;;AAED,SAAOX,UAAP;AAEH,CA9BM;AAgCP,OAAO,MAAMY,kCAAkC,GAAG,OAAOL,KAAP,EAAcM,QAAd,KAA2B;AACzE,MAAI,CAACN,KAAD,IAAU,CAACM,QAAf,EAAyB;AAEzB,SAAO,MAAMrC,8BAA8B,CAACiB,IAAD,EAAOc,KAAP,EAAcM,QAAd,CAA3C;AACH,CAJM;AAMP,OAAO,MAAMC,kCAAkC,GAAG,OAAOP,KAAP,EAAcM,QAAd,KAA2B;AACzE,MAAI,CAACN,KAAD,IAAU,CAACM,QAAf,EAAyB;AAEzB,SAAO,MAAMpC,0BAA0B,CAACgB,IAAD,EAAOc,KAAP,EAAcM,QAAd,CAAvC;AACH,CAJM","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { \n    getAuth, \n    signInWithRedirect, \n    signInWithPopup, \n    GoogleAuthProvider,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword\n} from 'firebase/auth';\n\nimport {\n    getFirestore,\n    doc,\n    getDoc,\n    setDoc\n} from 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCkkglmnZ_BvxsxQrnPFUuFT3Dy1YGYhGI\",\n    authDomain: \"e-commerce1-da0b9.firebaseapp.com\",\n    projectId: \"e-commerce1-da0b9\",\n    storageBucket: \"e-commerce1-da0b9.appspot.com\",\n    messagingSenderId: \"648681719155\",\n    appId: \"1:648681719155:web:64666acbeed12ceefe7106\"\n};\n  \nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n    prompt: \"select_account\"\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n    if (!userAuth) return;\n\n    const userDocRef = doc(db, 'users', userAuth.uid);\n\n    console.log(userDocRef);\n\n    const userSnapshot = await getDoc(userDocRef);\n\n    console.log(userSnapshot);\n    console.log(userSnapshot.exists());\n\n    if(!userSnapshot.exists()) {\n        const { displayName, email} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt,\n                ...additionalInformation,\n            });\n        } catch (error) {\n            console.log(\"error creating the user\", error.messaage);\n        }\n    }\n\n    return userDocRef;\n\n}\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) return;\n\n    return await createUserWithEmailAndPassword(auth, email, password);\n}\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) return;\n\n    return await signInWithEmailAndPassword(auth, email, password);\n}"]},"metadata":{},"sourceType":"module"}