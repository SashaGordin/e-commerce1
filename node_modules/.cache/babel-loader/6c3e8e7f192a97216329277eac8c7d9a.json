{"ast":null,"code":"var _jsxFileName = \"/Users/Sasha/Desktop/School/react/e-commerce1/src/contexts/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cartItems contains product to Add\n  const existingCartItem = cartItems.find(cartItems => cartItems.id === productToAdd.id); //if found increment quantity\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } //return new array with modified cartITems\n\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItems => cartItems.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  } //return new array with modified cartITems\n\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\n\nconst clearCartItem = (cartItems, cartItemToRemove) => {\n  return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  useEffect(() => {\n    const newCartTotal = cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    setCartCount(newCartTotal);\n  }, [cartItems]);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const removeItemFromCart = productToRemove => {\n    setCartItems(removeCartItem(cartItems, productToRemove));\n  };\n\n  const clearItemFromCart = itemToRemove => {\n    setCartItems(clearCartItem(cartItems, itemToRemove));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    clearItemFromCart,\n    addItemToCart,\n    cartItems,\n    cartTotal,\n    cartCount,\n    removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"Q34pEVQNnwOC1WPCa5SwU/+yuyE=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/Sasha/Desktop/School/react/e-commerce1/src/contexts/cart.context.jsx"],"names":["createContext","useEffect","useState","addCartItem","cartItems","productToAdd","existingCartItem","find","id","map","cartItem","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","cartTotal","CartProvider","children","setCartItems","setCartCount","setCartTotal","newCartCount","reduce","total","newCartTotal","price","productToRemove","itemToRemove","value"],"mappings":"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","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n\n\n    //find if cartItems contains product to Add\n    const existingCartItem = cartItems.find((cartItems) => cartItems.id === productToAdd.id);\n    //if found increment quantity\n    if (existingCartItem) {\n        return cartItems.map((cartItem) => cartItem.id === productToAdd.id ?\n        {...cartItem, quantity: cartItem.quantity + 1}\n            : cartItem\n        );\n    }\n    //return new array with modified cartITems\n    return [...cartItems, { ...productToAdd, quantity:1 }];\n}\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n\n\n    const existingCartItem = cartItems.find((cartItems) => cartItems.id === cartItemToRemove.id);\n\n    if (existingCartItem.quantity === 1) {\n        return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n    }\n    //return new array with modified cartITems\n    return cartItems.map((cartItem) => cartItem.id === cartItemToRemove.id ?\n    {...cartItem, quantity: cartItem.quantity - 1}\n        : cartItem\n    );}\n\n    const clearCartItem = (cartItems, cartItemToRemove) => {\n        return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n    }\n\nexport const CartContext = createContext({\n    isCartOpen: false,\n    setIsCartOpen: () => {},\n    cartItems: [],\n    addItemToCart: () => {},\n    removeItemFromCart: () => {},\n    clearItemFromCart: () => {},\n    cartCount: 0,\n    cartTotal: 0\n})\n\nexport const CartProvider = ({children}) => {\n    const [isCartOpen, setIsCartOpen] = useState(false);\n    const [cartItems, setCartItems] = useState([]);\n    const [cartCount, setCartCount] = useState(0);\n    const [cartTotal, setCartTotal] = useState(0);\n\n\n    useEffect(() => {\n        const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0)\n        setCartCount(newCartCount);\n    }, [cartItems]);\n\n    useEffect(() => {\n        const newCartTotal = cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0)\n        setCartCount(newCartTotal);\n    }, [cartItems]);\n\n\n    const addItemToCart = (productToAdd) => {\n        setCartItems(addCartItem(cartItems, productToAdd));\n    };\n\n    const removeItemFromCart = (productToRemove) => {\n        setCartItems(removeCartItem(cartItems, productToRemove));\n    };\n\n    const clearItemFromCart = (itemToRemove) => {\n        setCartItems(clearCartItem(cartItems, itemToRemove));\n    };\n\n    const value = { isCartOpen, setIsCartOpen, clearItemFromCart, addItemToCart, cartItems, cartTotal, cartCount, removeItemFromCart};\n    return(\n        <CartContext.Provider value={value}>{children}</CartContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}