{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCkkglmnZ_BvxsxQrnPFUuFT3Dy1YGYhGI\",\n  authDomain: \"e-commerce1-da0b9.firebaseapp.com\",\n  projectId: \"e-commerce1-da0b9\",\n  storageBucket: \"e-commerce1-da0b9.appspot.com\",\n  messagingSenderId: \"648681719155\",\n  appId: \"1:648681719155:web:64666acbeed12ceefe7106\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log(\"done\");\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n};\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.messaage);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"sources":["/Users/Sasha/Desktop/School/react/e-commerce1/src/utils/firebase/firebase.utils.js"],"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocuments","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","messaage","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"mappings":"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","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { \n    getAuth, \n    signInWithRedirect, \n    signInWithPopup, \n    GoogleAuthProvider,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    signOut,\n    onAuthStateChanged,\n    \n} from 'firebase/auth';\n\nimport {\n    getFirestore,\n    doc,\n    getDoc,\n    setDoc,\n    collection,\n    writeBatch,\n    query,\n    getDocs\n} from 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCkkglmnZ_BvxsxQrnPFUuFT3Dy1YGYhGI\",\n    authDomain: \"e-commerce1-da0b9.firebaseapp.com\",\n    projectId: \"e-commerce1-da0b9\",\n    storageBucket: \"e-commerce1-da0b9.appspot.com\",\n    messagingSenderId: \"648681719155\",\n    appId: \"1:648681719155:web:64666acbeed12ceefe7106\"\n};\n  \nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n    prompt: \"select_account\"\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = collection(db, collectionKey);\n    const batch = writeBatch(db);\n    objectsToAdd.forEach((object) => {\n        const docRef = doc(collectionRef, object.title.toLowerCase());\n        batch.set(docRef, object)\n    });\n    await batch.commit();\n    console.log(\"done\");\n} \n\nexport const getCategoriesAndDocuments = async () => {\n    const collectionRef = collection(db, 'categories');\n\n}\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n    if (!userAuth) return;\n\n    const userDocRef = doc(db, 'users', userAuth.uid);\n\n    const userSnapshot = await getDoc(userDocRef);\n\n    if(!userSnapshot.exists()) {\n        const { displayName, email} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt,\n                ...additionalInformation,\n            });\n        } catch (error) {\n            console.log(\"error creating the user\", error.messaage);\n        }\n    }\n\n    return userDocRef;\n\n}\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) return;\n\n    return await createUserWithEmailAndPassword(auth, email, password);\n}\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) return;\n\n    return await signInWithEmailAndPassword(auth, email, password);\n}\n\nexport const signOutUser = async() => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback) => onAuthStateChanged(auth, callback); "]},"metadata":{},"sourceType":"module"}