{"ast":null,"code":"var _jsxFileName = \"/Users/Sasha/Desktop/School/react/e-commerce1/src/components/button/button.component.jsx\";\nimport { BaseButton, InvertedButton, GoogleSignInButton } from './button.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BUTTON_TYPE_CLASSES = {\n  // base: 'base',\n  google: 'google-sign-in',\n  inverted: 'inverted'\n}; // const getButton = (buttonType = BUTTON_TYPE_CLASSES.base) => (\n//     {\n//         [BUTTON_TYPE_CLASSES.base] : BaseButton,\n//         [BUTTON_TYPE_CLASSES.google] : GoogleSignInButton,\n//         [BUTTON_TYPE_CLASSES.base] : InvertedButton,\n//     }[buttonType]\n// )\n\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    ...otherProps\n  } = _ref;\n  // const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `button-container ${BUTTON_TYPE_CLASSES[buttonType]}`,\n    ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n{\n  /* <CustomButton {...otherProps}>{children} </CustomButton>; */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/Sasha/Desktop/School/react/e-commerce1/src/components/button/button.component.jsx"],"names":["BaseButton","InvertedButton","GoogleSignInButton","BUTTON_TYPE_CLASSES","google","inverted","Button","children","buttonType","otherProps"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,cAArB,EAAqCC,kBAArC,QAA+D,iBAA/D;;AAEA,OAAO,MAAMC,mBAAmB,GAAG;AAC/B;AACAC,EAAAA,MAAM,EAAE,gBAFuB;AAG/BC,EAAAA,QAAQ,EAAE;AAHqB,CAA5B,C,CAMP;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,MAAM,GAAG,QAA6C;AAAA,MAA5C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwB,OAAGC;AAA3B,GAA4C;AACxD;AACA,sBACI;AAAQ,IAAA,SAAS,EAAG,oBAAmBN,mBAAmB,CAACK,UAAD,CAAa,EAAvE;AAAA,OAA8EC,UAA9E;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAPD;;KAAMD,M;AASN,eAAeA,MAAf;AAEA;AAAC;AAAgE","sourcesContent":["import { BaseButton, InvertedButton, GoogleSignInButton } from './button.styles'\n\nexport const BUTTON_TYPE_CLASSES = {\n    // base: 'base',\n    google: 'google-sign-in',\n    inverted: 'inverted',\n};\n\n// const getButton = (buttonType = BUTTON_TYPE_CLASSES.base) => (\n//     {\n//         [BUTTON_TYPE_CLASSES.base] : BaseButton,\n//         [BUTTON_TYPE_CLASSES.google] : GoogleSignInButton,\n//         [BUTTON_TYPE_CLASSES.base] : InvertedButton,\n//     }[buttonType]\n\n// )\n\nconst Button = ({ children, buttonType, ...otherProps }) => {\n    // const CustomButton = getButton(buttonType);\n    return (\n        <button className={`button-container ${BUTTON_TYPE_CLASSES[buttonType]}`} {...otherProps}>\n            {children}\n        </button>\n    )\n}\n\nexport default Button;\n\n{/* <CustomButton {...otherProps}>{children} </CustomButton>; */}"]},"metadata":{},"sourceType":"module"}