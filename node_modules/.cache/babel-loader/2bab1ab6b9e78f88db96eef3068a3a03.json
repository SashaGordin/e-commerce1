{"ast":null,"code":"var _jsxFileName = \"/Users/Sasha/Desktop/School/react/e-commerce1/src/components/sign-up-form/sign-up-form.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { createAuthUserWithEmailAndPassword, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  displayName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\"\n};\n\nconst SignUpForm = () => {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = formFields;\n  console.log(formFields);\n\n  const handleSubmit = async event => {\n    event.preventDefault(); //confirm password matches\n\n    if (password !== confirmPassword) {\n      alert(\"passwords do not match\");\n      return;\n    }\n\n    try {\n      const {\n        user\n      } = await createAuthUserWithEmailAndPassword(email, password);\n      const userDocRef = await createUserDocumentFromAuth(user, {\n        displayName\n      }); //const userDocRef = await createUserDocumentFromAuth(response);\n    } catch (error) {\n      if (error.code == 'auth/email-already-in-use') {\n        alert('cannot create user email already in use');\n      } else {\n        console.log(error);\n      }\n    } //see if authenticated user with email password\n    //create user document from return of previos\n\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Display Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"displayName\",\n        value: displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        onChange: handleChange,\n        name: \"email\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        required: true,\n        onChange: handleChange,\n        name: \"password\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        required: true,\n        onChange: handleChange,\n        name: \"confirmPassword\",\n        value: confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUpForm, \"BSTP5B8VO6H/Fwu712VTuD9hH54=\");\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/Users/Sasha/Desktop/School/react/e-commerce1/src/components/sign-up-form/sign-up-form.component.jsx"],"names":["useState","createAuthUserWithEmailAndPassword","createUserDocumentFromAuth","defaultFormFields","displayName","email","password","confirmPassword","SignUpForm","formFields","setFormFields","console","log","handleSubmit","event","preventDefault","alert","user","userDocRef","error","code","handleChange","name","value","target"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { createAuthUserWithEmailAndPassword, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\n\nconst defaultFormFields = {\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n};\n\nconst SignUpForm = () => {\n    const [formFields, setFormFields] = useState(defaultFormFields);\n    const { displayName, email, password, confirmPassword} = formFields;\n\n    console.log(formFields);\n\n    const handleSubmit = async(event) => {\n        event.preventDefault();\n        //confirm password matches\n        if (password !== confirmPassword) {\n            alert(\"passwords do not match\");\n            return;\n        } \n        \n        try {\n            const {user} = await createAuthUserWithEmailAndPassword(email, password);\n            const userDocRef = await createUserDocumentFromAuth(user, {displayName});\n            //const userDocRef = await createUserDocumentFromAuth(response);\n        } catch(error) {\n            if (error.code == 'auth/email-already-in-use') {\n                alert('cannot create user email already in use')\n            } else {\n                console.log(error);\n            }\n        }\n       \n       \n        //see if authenticated user with email password\n        //create user document from return of previos\n\n    }\n\n    const handleChange = (event) => {\n        const { name,value } = event.target;\n\n        setFormFields({...formFields, [name]: value});\n    };\n\n    return (\n        <div>\n            <h1>Sign up with your email and password</h1>\n            <form onSubmit={handleSubmit}>\n                <label>Display Name</label>\n                <input type=\"text\" required onChange = {handleChange} name=\"displayName\" value={displayName}/>\n\n                <label>Email</label>\n                <input type=\"email\" required onChange = {handleChange} name=\"email\" value={email}/>\n\n                <label>Password</label>\n                <input type=\"password\" required onChange = {handleChange} name=\"password\" value={password}/>\n\n                <label>Confirm Password</label>\n                <input type=\"password\" required onChange = {handleChange} name=\"confirmPassword\" value={confirmPassword}/>\n                <button type=\"submit\">Sign Up</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignUpForm;"]},"metadata":{},"sourceType":"module"}